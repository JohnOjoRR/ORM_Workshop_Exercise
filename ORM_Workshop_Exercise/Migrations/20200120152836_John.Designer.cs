// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ORM_Workshop_Exercise.DAL;

namespace ORM_Workshop_Exercise.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20200120152836_John")]
    partial class John
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ORM_Workshop_Exercise.Models.Illness", b =>
                {
                    b.Property<Guid>("IllnessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IllnessName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IllnessId");

                    b.ToTable("Illness");
                });

            modelBuilder.Entity("ORM_Workshop_Exercise.Models.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Active")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("PersonContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonIDnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonSurname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Person");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("ORM_Workshop_Exercise.Models.Visits", b =>
                {
                    b.Property<Guid>("VisitsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VisitsId");

                    b.HasIndex("ClientId");

                    b.HasIndex("DoctorId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("ORM_Workshop_Exercise.Models.Client", b =>
                {
                    b.HasBaseType("ORM_Workshop_Exercise.Models.Person");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IllnessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PersonId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("IllnessId");

                    b.HasIndex("PersonId1");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("ORM_Workshop_Exercise.Models.Doctor", b =>
                {
                    b.HasBaseType("ORM_Workshop_Exercise.Models.Person");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PersonId1")
                        .HasColumnName("Doctor_PersonId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Specialist")
                        .HasColumnType("int");

                    b.HasIndex("PersonId1");

                    b.HasDiscriminator().HasValue("Doctor");
                });

            modelBuilder.Entity("ORM_Workshop_Exercise.Models.Visits", b =>
                {
                    b.HasOne("ORM_Workshop_Exercise.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ORM_Workshop_Exercise.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ORM_Workshop_Exercise.Models.Client", b =>
                {
                    b.HasOne("ORM_Workshop_Exercise.Models.Illness", "Illness")
                        .WithMany()
                        .HasForeignKey("IllnessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ORM_Workshop_Exercise.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId1");
                });

            modelBuilder.Entity("ORM_Workshop_Exercise.Models.Doctor", b =>
                {
                    b.HasOne("ORM_Workshop_Exercise.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId1");
                });
#pragma warning restore 612, 618
        }
    }
}
